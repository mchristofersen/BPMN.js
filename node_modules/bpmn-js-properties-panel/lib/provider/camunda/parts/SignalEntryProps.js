 'use strict';

 var entryFactory = require('bpmn-js-properties-panel/lib/factory/EntryFactory'),
     getBusinessObject = require('bpmn-js/lib/util/ModelUtil').getBusinessObject,
     is = require('bpmn-js/lib/util/ModelUtil').is,
     cmdHelper = require('bpmn-js-properties-panel/lib/helper/CmdHelper');



 module.exports = function(group, element, bpmnFactory) {
         // Documentation
         if (is(element, 'bpmn:ExclusiveGateway')) {
             var i = 0;
             var entry = entryFactory.table({
                     id: 'signals',
                     labels: element.outgoing.map(function(elem) {
                         return i++
                     }),
                     modelProperties: ["name", "expression"],
                     getElements: function(element, node, entry, value) {
                         return element.outgoing.map(function(elem) {
                             // elem.businessObject.textContent = elem.businessObject.conditionExpression
                             return getBusinessObject(elem);

                         });


                     },
                     updateElement: function(element, properties, node, value) {
                         var moddle = bpmnJS.get('moddle');
                         console.log(element.outgoing[value].id);
                         var sequenceFlowElement = elementRegistry.get(element.outgoing[value].id),
                             sequenceFlow = sequenceFlowElement.businessObject;
                         // create a BPMN element that can be serialized to XML during export
                         var modeling = bpmnJS.get('modeling');
                         modeling.updateProperties(sequenceFlowElement, {
                             name: properties.name,
                             expression: properties.expression
                         });
                     }
                   });

                 group.entries.push(entry);

             }

         };
